---
title: "Vol. VI, No. 2 - December 2022"
subtitle: "MusMat • Brazilian Journal of Music and Mathematics"
---

## Full edition
[Download here](../wp-content/uploads/2022/12/MusMat_Journal_V6N2_2022.pdf)

[Errata](../wp-content/uploads/2023/03/errata.pdf)

## Individual papers
### Contextual Dyadic Transformations, and the Opening of Brahms’s Op. 5 as a Variation of the Opening of Schumann’s Op. 14
**Scott Murphy**
<p style="text-align: justify;"><strong>Abstract</strong>: A contextual transformation that acts on the diatonic content of outer-voice dyadic harmony provides a way to demonstrate another correspondence between the openings of the F-minor piano sonatas by Robert Schumann and Johannes Brahms beyond those already recognized in current research. This contextual transformation also models some variation procedures within other music of Brahms and his eighteenth-century predecessors, suggesting an understanding of any influence of Schumann’s opening on Brahms’s compositional procedures within the framework of variation.</p>
<p style="text-align: left;"><strong>Keywords</strong>: <em> Robert Schumann. Johannes Brahms. Sonata. Variation. Contextual transformation. Influence. </em></p>
[Download paper](../wp-content/uploads/2022/12/01-Murphy-V6N2_2022.pdf)

### Python Scripts for Rhythmic Partitioning Analysis
**Marcos da Silva Sampaio and Pauxy Gentil-Nunes**
<p style="text-align: justify;"><strong>Abstract</strong>: The Rhythmic Partitioning Analysis demands laborious tasks on segmentation and agglomeration/dispersion calculus. Parsemat software runs these tasks and renders indexogram and partitiogram charts. In the present paper, we introduce the Rhythmic Partitioning Scripts (RP Scripts) as an application of Rhythmic Partitioning in the Python environment. It adds some features absent in Parsemat, such as the access to measure indications of each partition, introduction of rest handling, annotation of texture info into digital scores, and other improvements. The RP Scripts collect musical events’ locations and output locations and partitions’ data into CSV files, render indexogram/partitiogram charts, and generate annotated MusicXML score files. RP Scripts have three components: calculator (RPC), plotter (RPP), and annotator (RPA) scripts.</p>
<p style="text-align: left;"><strong>Keywords</strong>: <em> Rhythmic Partitioning Analysis. Textural Analysis. Music Analysis. Python scripts. Music21. </em></p>
[Download paper](../wp-content/uploads/2022/12/02-Sampaio-Gentil-Nunes-V6N2_2022.pdf)

### On Xenakis’s Games of Musical Strategy
**Stefano Kalonaris**
<p style="text-align: justify;"><strong>Abstract</strong>: In this article Xenakis’s trilogy of pieces based on zero-sum games is investigated, revealing axiomatic inconsistencies between the game-theoretical models and the musical translations implemented according to the composer’s aesthetic preferences. The problematic elements regard 1) the formal definition of the games and 2) the limits of objective utility functions in the music domain. After introducing these games of musical strategy and the few existing practical implementations found in the literature, a detailed comparison between the mathematical models and Xenakis’s renditions is presented to highlight their divergence. Then, the feasibility from a musical perspective of the rational decision-making required by the models is explored through a computational simulation of game dynamics using Reinforcement Learning. Lastly, the article concludes by contextualising the findings to the increasingly ubiquitous role of the machine in the creative processes of musical composition and generation. In doing so, Xenakis’s original works offer themselves as a springboard for (re-)imagining and developing novel approaches integrating human-machine decision processes with musical design and interaction.</p>
<p style="text-align: left;"><strong>Keywords</strong>: <em> Iannis Xenakis. Game Theory. Reinforcement Learning. </em></p>
[Download paper](../wp-content/uploads/2022/12/03-Kalonaris-V6N2_2022.pdf)

### Building a Knowledge Base of Rhythms
**Charles Ames**
<p style="text-align: justify;"><strong>Abstract</strong>: This article is about composing programs. It explores generating up-front a knowledge base of rhythms as an alternative to generating rhythms on the fly. Since the knowledge base contains much more information than any one composing program will ever actually use, it employs ISAM technology to persist the information in one random-access file. The fundamental rhythmic entities are monophonic patterns and polyphonic textures. Patterns are defined as successions of pulse events (rests, attacks, ties). Textures present multiple patterns simultaneously. Various entity properties are calculated up front and stored alongside content data. For textures, these properties include an attack profile, which is a vector. A persistent lookup map is realized to efficiently identify textures sharing attack profiles in common. A pattern-to-pattern comparison identifies relationships which are documented in an ISAM map; these pattern-to-pattern relationships are then used to build a random-access map of texture-to-texture relationships. The article closes with a series of applications demonstrating how knowledge-base queries, random shuffling, and filtering operate to select rhythms.</p>
<p style="text-align: left;"><strong>Keywords</strong>: <em> Composing program. Rhythm knowledge base. ISAM. </em></p>
[Download paper](../wp-content/uploads/2022/12/04-Ames-V6N2_2022.pdf)